-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.companies
(
    company_id bigserial NOT NULL,
    uen text COLLATE pg_catalog."default",
    name text COLLATE pg_catalog."default",
    industry_norm text COLLATE pg_catalog."default",
    employees_est integer,
    revenue_bucket text COLLATE pg_catalog."default",
    incorporation_year integer,
    sg_registered boolean DEFAULT true,
    last_seen timestamp with time zone DEFAULT now(),
    website_domain text COLLATE pg_catalog."default",
    industry_code text COLLATE pg_catalog."default",
    company_size integer,
    annual_revenue text COLLATE pg_catalog."default",
    hq_city text COLLATE pg_catalog."default",
    hq_country text COLLATE pg_catalog."default",
    linkedin_url text COLLATE pg_catalog."default",
    founded_year integer,
    tech_stack text[] COLLATE pg_catalog."default",
    ownership_type text COLLATE pg_catalog."default",
    funding_status jsonb,
    employee_turnover double precision,
    web_traffic bigint,
    email text COLLATE pg_catalog."default",
    phone_number text COLLATE pg_catalog."default",
    location_city text COLLATE pg_catalog."default",
    location_country text COLLATE pg_catalog."default",
    CONSTRAINT companies_pkey PRIMARY KEY (company_id),
    CONSTRAINT companies_uen_key UNIQUE (uen)
);

CREATE TABLE IF NOT EXISTS public.company_enrichment_runs
(
    company_id bigint NOT NULL,
    run_id bigint NOT NULL,
    domain text COLLATE pg_catalog."default",
    about_text text COLLATE pg_catalog."default",
    tech_stack text[] COLLATE pg_catalog."default",
    jobs_count integer,
    linkedin_url text COLLATE pg_catalog."default",
    news_latest_at date,
    source_json jsonb,
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT company_enrichment_runs_pkey PRIMARY KEY (company_id, run_id)
);

CREATE TABLE IF NOT EXISTS public.contacts
(
    contact_id uuid NOT NULL DEFAULT gen_random_uuid(),
    company_id bigint NOT NULL,
    full_name text COLLATE pg_catalog."default",
    email text COLLATE pg_catalog."default",
    email_verified boolean DEFAULT false,
    verification_confidence double precision,
    job_title text COLLATE pg_catalog."default",
    department text COLLATE pg_catalog."default",
    linkedin_profile text COLLATE pg_catalog."default",
    phone_number text COLLATE pg_catalog."default",
    seniority text COLLATE pg_catalog."default",
    location_city text COLLATE pg_catalog."default",
    location_country text COLLATE pg_catalog."default",
    contact_source text COLLATE pg_catalog."default",
    email_engagement jsonb,
    last_interaction timestamp with time zone,
    preferred_contact_method text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT contacts_pkey PRIMARY KEY (contact_id)
);

CREATE TABLE IF NOT EXISTS public.email_verification_cache
(
    email text COLLATE pg_catalog."default" NOT NULL,
    status text COLLATE pg_catalog."default",
    confidence double precision,
    checked_at timestamp with time zone DEFAULT now(),
    CONSTRAINT email_verification_cache_pkey PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS public.enrichment_runs
(
    run_id bigserial NOT NULL,
    started_at timestamp with time zone DEFAULT now(),
    CONSTRAINT enrichment_runs_pkey PRIMARY KEY (run_id)
);

CREATE TABLE IF NOT EXISTS public.icp_rules
(
    rule_id serial NOT NULL,
    name text COLLATE pg_catalog."default",
    payload jsonb NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT icp_rules_pkey PRIMARY KEY (rule_id),
    CONSTRAINT icp_rules_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.lead_emails
(
    email text COLLATE pg_catalog."default" NOT NULL,
    company_id bigint,
    first_name text COLLATE pg_catalog."default",
    last_name text COLLATE pg_catalog."default",
    role_title text COLLATE pg_catalog."default",
    verification_status text COLLATE pg_catalog."default",
    smtp_confidence numeric,
    left_company boolean DEFAULT false,
    role_last_seen date,
    source text COLLATE pg_catalog."default",
    last_verified_at timestamp with time zone,
    bounce_count integer DEFAULT 0,
    CONSTRAINT lead_emails_pkey PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS public.lead_features
(
    company_id integer NOT NULL,
    features jsonb,
    CONSTRAINT lead_features_pkey PRIMARY KEY (company_id)
);

CREATE TABLE IF NOT EXISTS public.lead_scores
(
    company_id integer NOT NULL,
    score double precision,
    bucket text COLLATE pg_catalog."default",
    rationale text COLLATE pg_catalog."default",
    cache_key text COLLATE pg_catalog."default",
    CONSTRAINT lead_scores_pkey PRIMARY KEY (company_id)
);

CREATE TABLE IF NOT EXISTS public.ssic_ref
(
    code text COLLATE pg_catalog."default" NOT NULL,
    title text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    version text COLLATE pg_catalog."default" NOT NULL,
    effective_date date NOT NULL DEFAULT CURRENT_DATE,
    source_file_hash text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    fts tsvector,
    CONSTRAINT ssic_ref_pkey PRIMARY KEY (code)
);

CREATE TABLE IF NOT EXISTS public.staging_acra_companies
(
    uen text COLLATE pg_catalog."default" NOT NULL,
    issuance_agency_id text COLLATE pg_catalog."default",
    entity_name text COLLATE pg_catalog."default",
    entity_type_description text COLLATE pg_catalog."default",
    business_constitution_description text COLLATE pg_catalog."default",
    company_type_description text COLLATE pg_catalog."default",
    paf_constitution_description text COLLATE pg_catalog."default",
    entity_status_description text COLLATE pg_catalog."default",
    registration_incorporation_date text COLLATE pg_catalog."default",
    uen_issue_date text COLLATE pg_catalog."default",
    address_type text COLLATE pg_catalog."default",
    block text COLLATE pg_catalog."default",
    street_name text COLLATE pg_catalog."default",
    level_no text COLLATE pg_catalog."default",
    unit_no text COLLATE pg_catalog."default",
    building_name text COLLATE pg_catalog."default",
    postal_code text COLLATE pg_catalog."default",
    other_address_line1 text COLLATE pg_catalog."default",
    other_address_line2 text COLLATE pg_catalog."default",
    account_due_date text COLLATE pg_catalog."default",
    annual_return_date text COLLATE pg_catalog."default",
    primary_ssic_code integer,
    primary_ssic_description text COLLATE pg_catalog."default",
    primary_user_described_activity text COLLATE pg_catalog."default",
    secondary_ssic_code text COLLATE pg_catalog."default",
    secondary_ssic_description text COLLATE pg_catalog."default",
    secondary_user_described_activity text COLLATE pg_catalog."default",
    no_of_officers integer,
    former_entity_name1 text COLLATE pg_catalog."default",
    former_entity_name2 text COLLATE pg_catalog."default",
    former_entity_name3 text COLLATE pg_catalog."default",
    former_entity_name4 text COLLATE pg_catalog."default",
    former_entity_name5 text COLLATE pg_catalog."default",
    former_entity_name6 text COLLATE pg_catalog."default",
    former_entity_name7 text COLLATE pg_catalog."default",
    former_entity_name8 text COLLATE pg_catalog."default",
    former_entity_name9 text COLLATE pg_catalog."default",
    former_entity_name10 text COLLATE pg_catalog."default",
    former_entity_name11 text COLLATE pg_catalog."default",
    former_entity_name12 text COLLATE pg_catalog."default",
    former_entity_name13 text COLLATE pg_catalog."default",
    former_entity_name14 text COLLATE pg_catalog."default",
    former_entity_name15 text COLLATE pg_catalog."default",
    uen_of_audit_firm1 text COLLATE pg_catalog."default",
    name_of_audit_firm1 text COLLATE pg_catalog."default",
    uen_of_audit_firm2 text COLLATE pg_catalog."default",
    name_of_audit_firm2 text COLLATE pg_catalog."default",
    uen_of_audit_firm3 text COLLATE pg_catalog."default",
    name_of_audit_firm3 text COLLATE pg_catalog."default",
    uen_of_audit_firm4 text COLLATE pg_catalog."default",
    name_of_audit_firm4 text COLLATE pg_catalog."default",
    uen_of_audit_firm5 text COLLATE pg_catalog."default",
    name_of_audit_firm5 text COLLATE pg_catalog."default",
    CONSTRAINT staging_acra_companies_pkey PRIMARY KEY (uen)
);

CREATE TABLE IF NOT EXISTS public.summaries
(
    id bigserial NOT NULL,
    company_id bigint,
    url text COLLATE pg_catalog."default" NOT NULL,
    title text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    content_summary text COLLATE pg_catalog."default",
    key_pages jsonb,
    signals jsonb,
    rule_score integer,
    rule_band text COLLATE pg_catalog."default",
    shortlist jsonb,
    crawl_metadata jsonb,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT summaries_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.company_enrichment_runs
    ADD CONSTRAINT company_enrichment_runs_company_id_fkey FOREIGN KEY (company_id)
    REFERENCES public.companies (company_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.company_enrichment_runs
    ADD CONSTRAINT company_enrichment_runs_run_id_fkey FOREIGN KEY (run_id)
    REFERENCES public.enrichment_runs (run_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.contacts
    ADD CONSTRAINT contacts_company_id_fkey FOREIGN KEY (company_id)
    REFERENCES public.companies (company_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lead_emails
    ADD CONSTRAINT lead_emails_company_id_fkey FOREIGN KEY (company_id)
    REFERENCES public.companies (company_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.summaries
    ADD CONSTRAINT summaries_company_id_fkey FOREIGN KEY (company_id)
    REFERENCES public.companies (company_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_summaries_company
    ON public.summaries(company_id);

END;